{"version":3,"sources":["components/Navbar.js","home/Home.js","clients/ClientInfo.js","clients/ColumnHeaders.js","clients/UpdateClient.js","clients/SearchBar.js","clients/Loader.js","clients/ActivePage.js","clients/Clients.js","actions/UpdateClient.js","actions/AddClient.js","actions/Actions.js","analytics/SalesByCategory.js","analytics/TopEmployees.js","analytics/SalesSince.js","analytics/ClientAcquisition.js","analytics/Charts.js","analytics/Badge.js","analytics/NewClients.js","analytics/EmailsSent.js","analytics/OutstandingClients.js","analytics/HottestCountry.js","analytics/Badges.js","analytics/Analytics.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","id","to","Component","Home","ClientInfo","showUpdateWindow","props","client","_id","this","name","split","surname","firstContact","splice","join","sold","emailType","className","onClick","country","owner","ColumnHeaders","columnHeaders","map","c","key","UpdateClient","updateClient","inputVals","state","handleInput","event","inputType","target","value","setState","handleCheckbox","checked","checkedVals","yes","no","componentDidMount","Object","keys","hideUpdateWindow","type","onChange","SearchBar","handleSearchVals","searchValue","handleSold","soldVal","handleSelect","searchCategory","label","placeholder","option","Loader","ActivePage","pageBack","console","log","pageForward","currentPage","numOfPages","Clients","clientsToDisplay","clientId","clientToUpdate","updateVals","searchVal","getFilteredClients","filteredClients","itemsPerPage","amountOfClients","length","startAt","Math","ceil","slice","clients","forEach","toLowerCase","includes","push","nextProps","filter","handleCheck","category","check","setTimeout","handleError","errorType","messageType","changeClientInfo","a","async","clientName","inputVal","messageContent","enterClientName","doesntExist","emptyVal","capitalizedOwners","salesByOwner","splittedOwner","nameInd","capitalized","charAt","toUpperCase","options","disabled","hidden","list","AddClient","handleRequired","isEmpty","field","addClient","addNewClient","isLegit","email","Actions","SalesByCategory","salesByCategory","categoryInput","getSalesByCategory","data","salesInfo","categories","height","width","margin","top","right","bottom","left","dataKey","stackId","fill","getDerivedStateFromProps","TopEmployees","salesByOwnerObj","sales","topThree","sort","k","v","employee","layout","stroke","barSize","tempData","year","SalesSince","salesSince","ready","loadingState","first","month","dot","strokeWidth","ClientAcquisition","clientsSum","1","6","12","handleClientAcquisition","num","handleMonthlySales","titles","art","isAnimationActive","innerRadius","outerRadius","Charts","Badge","iconName","title","NewClients","monthNames","d","Date","currentMonth","getMonth","fullTitle","EmailsSent","OutstandingClients","HottestCountry","Badges","Analytics","URL","window","location","hostname","App","getClients","axios","get","then","catch","error","capitalizedCategory","salesByCategoryName","results","setClientsSum","salesArray","currentClientsNum","parseInt","setSalesSince","getSalesSince","func","status","monthsArray","pastMonths","date","index","operationType","capitalizeWord","managedInputVals","toISOString","post","r","e","advancedUpdateClient","updatedVal","put","shortMonths","now","getYear","i","setDate","getDate","reverse","word","undefined","exact","path","render","Boolean","match","ReactDOM","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.d315c4e7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport '../Styles/navbar.css'\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"navbar\">\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/Clients\">Clients</Link>\r\n                <Link to=\"/Actions\">Actions</Link>\r\n                <Link to=\"/Analytics\">Analytics</Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport '../Styles/home.css'\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"home-label\">\r\n               <div>\r\n                   <span id=\"c\">C</span>\r\n                   <span id=\"r\">R</span>\r\n                   <span id=\"m\">M</span>\r\n                </div> \r\n               <span> CUSTOMER RELATIONSHIP MANAGEMENT</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport '../Styles/clients.css'\r\n\r\nclass ClientInfo extends Component {\r\n\r\n    showUpdateWindow = () => {\r\n        this.props.showUpdateWindow(this.props.client._id)\r\n    }\r\n\r\n    render() {\r\n        let client = this.props.client\r\n        let name = client.name.split(\" \")[0]\r\n        let surname = client.name.split(\" \")[1]\r\n        let firstContact = client.firstContact.split(\"\").splice(0, 10).join(\"\")\r\n        let sold = client.sold\r\n        // debugger\r\n        let emailType = client.emailType // !== \"\" ? client.email.split(\"\")[0].toUpperCase() : undefined \r\n        return (\r\n            <div className=\"client-info\" onClick={this.showUpdateWindow}>\r\n                <div className=\"column-info\">{name}</div>\r\n                <div className=\"column-info\">{surname}</div>\r\n                <div className=\"column-info\">{client.country}</div>\r\n                <div className=\"column-info\">{firstContact}</div>\r\n                {emailType === null || emailType === \"\" ? \r\n                    <div className=\"column-info\">-</div> :\r\n                    <div className=\"column-info\">{emailType}</div>            \r\n                }\r\n                {sold?\r\n                    <div className=\"column-info\"> \r\n                        <i className=\"fas fa-check\"></i> \r\n                    </div> :\r\n                    <div className=\"column-info\">-</div>               \r\n                }\r\n                <div className=\"column-info\">{client.owner}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClientInfo;","import React, { Component } from 'react';\r\nimport '../Styles/clients.css'\r\n\r\nclass ColumnHeaders extends Component {\r\n    render() {\r\n        const columnHeaders = this.props.columnHeaders\r\n        return (\r\n            <div id=\"column-headers\">\r\n                {columnHeaders.map(c => {\r\n                    return (\r\n                        <div key={c} className=\"column-header\">{c}</div>\r\n                    )\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ColumnHeaders;","import React, { Component } from 'react';\r\n\r\nclass UpdateClient extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            inputVals : {\r\n                country: \"\",\r\n                emailType : \"\",\r\n                owner : \"\",\r\n                sold :  null ,\r\n            },\r\n            checkedVals : {\r\n                yes : false,\r\n                no : false\r\n            }\r\n        }\r\n    }\r\n\r\n    updateClient = () => {\r\n        let inputVals = this.state.inputVals\r\n        this.props.updateClient(inputVals)\r\n    }\r\n\r\n    handleInput = (event) => {\r\n        let inputType = event.target.name\r\n        let inputVals =this.state.inputVals\r\n        inputVals[inputType] = event.target.value\r\n        this.setState({inputVals})\r\n    }\r\n\r\n\r\n    handleCheckbox= (event) => {\r\n        let name = event.target.name\r\n        let checked = event.target.checked\r\n        let checkedVals = this.state.checkedVals\r\n        let inputVals = this.state.inputVals\r\n        if (name === \"yes\"){\r\n            checkedVals = {yes: checked, no : !checked } \r\n            inputVals.sold = true\r\n        } \r\n        else {\r\n            checkedVals = {yes: !checked, no : checked }\r\n            inputVals.sold = false\r\n        }\r\n        this.setState({checkedVals : checkedVals, inputVals : inputVals})\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let client = this.props.client\r\n        let inputVals = this.state.inputVals\r\n        let inputKeys = Object.keys(inputVals)\r\n        for (let key of inputKeys){\r\n            inputVals[key] = client[key]\r\n        }\r\n        this.setState({inputVals})\r\n    }\r\n\r\n    render() {\r\n        let client = this.props.client\r\n        let {inputVals , checkedVals} = this.state\r\n\r\n        return (\r\n            <div id=\"update-client-container\">\r\n                <button className=\"close-update\" onClick={this.props.hideUpdateWindow}>X</button>\r\n                <div id=\"client-name\"> {client.name} </div>\r\n                <div id=\"update-client\">\r\n                    <span> Country:</span>\r\n                        <input className=\"text-input\" name=\"country\" type=\"text\" value={inputVals.country} onChange={this.handleInput}/>\r\n                    <span> emailType:</span>\r\n                        <input className=\"text-input\" name=\"emailType\" type=\"text\" value={inputVals.emailType} onChange={this.handleInput}/>\r\n                    <span> Owner:</span>\r\n                        <input className=\"text-input\" name=\"owner\" type=\"text\" value={inputVals.owner} onChange={this.handleInput}/>\r\n                    <span> Sold:</span>\r\n                        <div id=\"radio-update-input\">\r\n                            <input className=\"radio-update-input\" name=\"yes\" type=\"radio\" checked={checkedVals.yes} onChange={this.handleCheckbox}/>\r\n                                <span>Yes</span>\r\n                            <input className=\"radio-update-input\" name=\"no\" type=\"radio\" checked={checkedVals.no} onChange={this.handleCheckbox}/>\r\n                                <span>No</span>\r\n                        </div>               \r\n                </div>\r\n                <div className=\"update-button\" onClick={this.updateClient}> Update</div>\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default UpdateClient;","import React, { Component } from 'react';\r\nimport '../Styles/clients.css'\r\n\r\nclass SearchBar extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            columnHeaders : [\r\n                {value : \"name\", label:\"Name\"}, \r\n                {value: \"country\", label: \"country\"}, \r\n                {value: \"emailType\", label: \"Email Type\"}, \r\n                {value: \"owner\", label: \"Owner\"},\r\n            ],\r\n            searchCategory : { value: \"name\", label: \"Name\"},\r\n            searchValue : \"\",\r\n        }\r\n    }\r\n\r\n    handleSearchVals = (event) => {\r\n        let searchValue = event.target.value\r\n        this.setState({searchValue}, () => {\r\n            this.props.handleSearchVals(searchValue)\r\n        })\r\n    }\r\n\r\n    handleSold = (event) => {\r\n        let soldVal = event.target.value\r\n        soldVal === \"yes\" ? soldVal = true : soldVal = false\r\n        this.props.handleSold(soldVal)\r\n    }\r\n\r\n    handleSelect = (event) => {\r\n        let searchCategory = {\r\n            label : event.target.label,\r\n            value : event.target.value,\r\n        }\r\n        this.setState({searchCategory}, () => {\r\n            this.props.handleSelect(searchCategory.value)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let columnHeaders = this.state.columnHeaders\r\n        let searchCategory = this.state.searchCategory\r\n        return (\r\n            <div id=\"search-container\">\r\n                <input \r\n                    id=\"search-input\"\r\n                    type=\"Text\"\r\n                    placeholder=\"Search\" \r\n                    value={this.state.searchValue} \r\n                    onChange={this.handleSearchVals}>\r\n                </input>\r\n                <select id=\"select\" onChange={this.handleSelect} label={searchCategory.label} value={searchCategory.value}>\r\n                    {columnHeaders.map(option => {\r\n                        return(\r\n                            <option value={option.value} key={option.label}>{option.label}</option>\r\n                        )\r\n                    })}\r\n                </select>\r\n                <span id=\"check-sold\">\r\n                    <span id=\"label\" >Sold:</span>\r\n                    <input type=\"radio\" name=\"sold\" value=\"yes\" onChange={this.handleSold}/><span>Yes</span>\r\n                    <input type=\"radio\" name=\"sold\" value=\"no\" onChange={this.handleSold}/><span>No</span>\r\n                </span>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React, { Component } from 'react';\r\nimport '../Styles/clients.css';\r\n\r\nclass Loader extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"spinner\">\r\n                <div className=\"rect1\"></div>\r\n                <div className=\"rect2\"></div>\r\n                <div className=\"rect3\"></div>\r\n                <div className=\"rect4\"></div>\r\n                <div className=\"rect5\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react';\r\nimport '../Styles/clients.css'\r\n\r\nclass ActivePage extends Component {\r\n    pageBack = () => {\r\n        console.log(\"Go back\")\r\n        this.props.pageBack()\r\n    }\r\n\r\n    pageForward = () => {\r\n        console.log(\"Go forward\")\r\n        this.props.pageForward()\r\n    } \r\n\r\n    render() {\r\n        let currentPage = this.props.currentPage\r\n        let numOfPages = this.props.numOfPages\r\n        return (\r\n            <div id=\"page-manager\">\r\n                <i className=\"fas fa-caret-left\" id=\"arrow\" onClick={this.pageBack}></i>\r\n                    <span> {currentPage} - {numOfPages} </span>\r\n                <i className=\"fas fa-caret-right\" id=\"arrow\" onClick={this.pageForward}></i>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ActivePage;","import React, { Component } from 'react';\r\nimport ClientInfo from '../clients/ClientInfo'\r\nimport ColumnHeaders from './ColumnHeaders'\r\nimport UpdateClient from './UpdateClient'\r\nimport SearchBar from './SearchBar'\r\nimport Loader from './Loader'\r\nimport ActivePage from './ActivePage'\r\nimport '../Styles/clients.css'\r\n\r\nclass Clients extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            clients: [],\r\n            filteredClients: [],\r\n            clientsToDisplay: [],\r\n            itemsPerPage: 30,\r\n            currentPage: 1,\r\n            numOfPages: null,\r\n            searchVal: \"\",\r\n            searchCategory: \"name\",\r\n            soldVal: null,\r\n            showUpdateWindow: false,\r\n            clientToUpdate: \"\",\r\n            columnHeaders: [\"Name\", \"Surname\", \"Country\", \"First Contact\", \"Email Type\", \"Sold\", \"Owner\"],\r\n        }\r\n    }\r\n\r\n    pageBack = () => {\r\n        let currentPage = this.state.currentPage\r\n        if (currentPage > 1) {\r\n            this.setState({ currentPage: this.state.currentPage - 1 }, () => {\r\n                this.clientsToDisplay()\r\n            })\r\n        }\r\n    }\r\n\r\n    pageForward = () => {\r\n        const { currentPage, numOfPages } = this.state\r\n        if (currentPage < numOfPages) {\r\n            this.setState({ currentPage: this.state.currentPage + 1 }, () => {\r\n                this.clientsToDisplay()\r\n            })\r\n        }\r\n    }\r\n\r\n    showUpdateWindow = (clientId) => {\r\n        this.setState({\r\n            showUpdateWindow: true,\r\n            clientToUpdate: clientId\r\n        })\r\n    }\r\n\r\n    hideUpdateWindow = () => {\r\n        this.setState({ showUpdateWindow: false })\r\n    }\r\n\r\n    updateClient = (updateVals) => {\r\n        const { clientToUpdate } = this.state\r\n        this.props.updateClient(clientToUpdate, updateVals)\r\n        this.setState({ showUpdateWindow: false })\r\n    }\r\n\r\n    handleSearchVals = (searchVal) => {\r\n        this.setState({ searchVal }, () => {\r\n            this.getFilteredClients()\r\n        })\r\n    }\r\n\r\n    handleSelect = (searchCategory) => {\r\n        this.setState({ searchCategory }, () => {\r\n            this.getFilteredClients()\r\n        })\r\n    }\r\n\r\n    handleSold = (soldVal) => {\r\n        this.setState({ soldVal }, () => {\r\n            this.getFilteredClients()\r\n        })\r\n    }\r\n\r\n    clientsToDisplay = () => {\r\n        const { filteredClients, currentPage, itemsPerPage } = this.state\r\n        const amountOfClients = filteredClients.length\r\n        const startAt = (currentPage - 1) * itemsPerPage\r\n\r\n        let numOfPages = Math.ceil(amountOfClients / itemsPerPage)\r\n        this.setState({ numOfPages })\r\n        let clientsToDisplay = filteredClients.slice(startAt, currentPage * itemsPerPage)\r\n        this.setState({ clientsToDisplay })\r\n    }\r\n\r\n    getFilteredClients = () => {\r\n        console.log(\"getting filtered clients\")\r\n        let { clients, searchCategory, searchVal, soldVal } = this.state\r\n        if (searchVal === null) { searchVal = \"\" }\r\n\r\n        let filteredClients = []  //search filter\r\n        clients.forEach(client => {\r\n            if (client[searchCategory] === null) { client[searchCategory] = \"\" }\r\n            if (soldVal !== null) {\r\n                if (client[searchCategory].toLowerCase().includes(searchVal.toLowerCase()) && client.sold === soldVal) { filteredClients.push(client) }\r\n            }\r\n            else {\r\n                if (client[searchCategory].toLowerCase().includes(searchVal.toLowerCase())) { filteredClients.push(client) }\r\n            }\r\n        })\r\n\r\n        this.setState({ filteredClients }, () => {\r\n            this.clientsToDisplay()\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log('Clients - recieved props')\r\n        this.setState({ clients: nextProps.clients }, () => {\r\n            this.getFilteredClients()\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        console.log(\"Clients - Mounted\")\r\n        this.setState({ clients: this.props.clients }, () => {\r\n            this.getFilteredClients()\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        let { clients, filteredClients, clientsToDisplay } = this.state\r\n        // console.log(filteredClients)\r\n        // console.log(clientsToDisplay)\r\n\r\n        //manage updateClient\r\n        let { showUpdateWindow, clientToUpdate } = this.state\r\n        let client = {}\r\n        if (clientToUpdate) {\r\n            client = filteredClients.filter(c => c._id === clientToUpdate)[0]\r\n        }\r\n\r\n        return (\r\n            clients.length === 0 ?\r\n                <Loader /> :\r\n\r\n                <div id=\"clients-page\">\r\n\r\n                    <SearchBar\r\n                        handleSearchVals={this.handleSearchVals}\r\n                        handleSelect={this.handleSelect}\r\n                        handleSold={this.handleSold} />\r\n\r\n                    <ActivePage\r\n                        currentPage={this.state.currentPage}\r\n                        numOfPages={this.state.numOfPages}\r\n                        pageBack={this.pageBack}\r\n                        pageForward={this.pageForward} />\r\n\r\n                    <div id=\"clients-table\">\r\n                        <ColumnHeaders columnHeaders={this.state.columnHeaders} />\r\n\r\n                        <div id=\"clients-rows\">\r\n                            {clientsToDisplay.map(c => {\r\n                                return (\r\n                                    <ClientInfo\r\n                                        key={c._id}\r\n                                        client={c}\r\n                                        showUpdateWindow={this.showUpdateWindow} />\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {showUpdateWindow ?\r\n                        <UpdateClient\r\n                            client={client}\r\n                            hideUpdateWindow={this.hideUpdateWindow}\r\n                            updateClient={this.updateClient} /> : <></>\r\n                    }\r\n\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Clients;","import React, { Component } from 'react';\r\n\r\nclass UpdateClient extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            inputVals : {\r\n                name : \"\",\r\n                emailType : \"\",\r\n                owner : \"\",    \r\n                sold : true,            \r\n            },\r\n            messageType : null,\r\n            messageContent : {\r\n                enterClientName : \"Please enter the client's name\",\r\n                doesntExist : \"This client doesn't exist\",\r\n                emptyVal : \"Please enter content\"\r\n            },\r\n            check: {\r\n                emailType: false,\r\n                owner: false,\r\n                sold: false,\r\n            },\r\n        }\r\n    }\r\n\r\n    handleCheck = (category) => {\r\n        const {check} = this.state\r\n        check[category] = false\r\n        this.setState({check})\r\n        setTimeout(() => {\r\n            check[category] = true\r\n            this.setState({check})\r\n        }, 10);\r\n    }\r\n\r\n    handleError = (errorType) => {\r\n        this.setState({\r\n            messageType : errorType,\r\n            check :  {emailType: false, owner: false, sold: false}\r\n        })\r\n        setTimeout(() => {\r\n            this.setState({\r\n                messageType : null,\r\n            })\r\n        }, 3000);\r\n    }\r\n\r\n    changeClientInfo = async (event) => {\r\n        const category = event.target.id\r\n        const clientName = this.state.inputVals.name\r\n        const inputVal = this.state.inputVals[category]\r\n        if (clientName === \"\"){\r\n            this.handleError(\"enterClientName\")\r\n        }\r\n        else{\r\n            if (inputVal === \"\"){\r\n                this.handleError(\"emptyVal\")\r\n            }\r\n            else {\r\n                let isLegit = await this.props.changeClientInfo(clientName, category, inputVal)\r\n                if (isLegit){\r\n                    this.handleCheck(category)\r\n                    console.log(\"updated client\", clientName)\r\n                }  \r\n                else{\r\n                    this.handleError(\"doesntExist\")\r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    handleInput = (event) => {\r\n        const category = event.target.name\r\n        const value = event.target.value\r\n        let {inputVals} = this.state\r\n        inputVals[category] = value\r\n        this.setState({inputVals})\r\n    }\r\n\r\n    render() {\r\n        const {inputVals, messageContent, messageType, check} = this.state\r\n        const owners = Object.keys(this.props.salesByOwner)\r\n        let capitalizedOwners = owners.map(owner => {\r\n            let splittedOwner = owner.split(\" \")\r\n            for (let nameInd in splittedOwner){\r\n                let name = splittedOwner[nameInd]\r\n                let capitalized = name.charAt(0).toUpperCase() + name.slice(1)\r\n                splittedOwner[nameInd] = capitalized\r\n            }\r\n            return splittedOwner.join(\" \")\r\n        })\r\n        return (\r\n            <div id=\"actions-update\">\r\n                <h3>UPDATE</h3>\r\n                <div id=\"actions-update-container\">\r\n\r\n                    <span className=\"client-name\"> Name:</span>\r\n                        <input \r\n                            options={[\"lets\",\"try\",\"this\"]} \r\n                            placeholder=\"Client name\" \r\n                            className=\"text-input\" \r\n                            id=\"update-name-input\"\r\n                            name=\"name\" type=\"text\" \r\n                            value={inputVals.name} \r\n                            onChange={this.handleInput}/>\r\n                        {messageType === \"doesntExist\" ? <span id=\"doesnt-exist\">{messageContent.doesntExist}</span>  : <></> }   \r\n                        {messageType === \"emptyVal\" ? <span id=\"doesnt-exist\">{messageContent.emptyVal}</span>  : <></> }   \r\n                        {messageType === \"enterClientName\" ? <span id=\"doesnt-exist\">{messageContent.enterClientName}</span>  : <></> }   \r\n                    \r\n                    <div id=\"other-updates-container\">\r\n                        <span> Send email:</span>\r\n                            <select value={inputVals.emailType} className=\"text-input\" name=\"emailType\" type=\"text\" onChange={this.handleInput}>\r\n                                <option value=\"\" disabled hidden>Email type</option>\r\n                                <option value=\"A\">A</option>\r\n                                <option value=\"B\">B</option>\r\n                                <option value=\"C\">C</option>\r\n                                <option value=\"D\">D</option>\r\n                            </select>\r\n                                <span className=\"click\" id=\"emailType\" onClick={this.changeClientInfo}>SEND</span>\r\n                                    {check.emailType ?  <i className=\"fas fa-check\"></i> : <div></div>}\r\n                        <span> Tranfer ownership to:</span>\r\n                            <input list=\"owners\" id=\"owner\" name=\"owner\" className=\"text-input\"  placeholder=\"Owner\" value={inputVals.owner} onChange={this.handleInput}/>\r\n                                <span className=\"click\" id=\"owner\" onClick={this.changeClientInfo}>TRANSFER</span>\r\n                                    {check.owner ?  <i className=\"fas fa-check\"></i> : <div></div>}\r\n                        <span> Declare Sale:</span>\r\n                            <div/>\r\n                                <span className=\"click\" id=\"sold\" onClick={this.changeClientInfo}>DECLARE</span> \r\n                                    {check.sold ?  <i className=\"fas fa-check\"></i> : <div></div>}\r\n                    </div>\r\n\r\n                    <datalist id=\"owners\">\r\n                        {capitalizedOwners.map(owner => \r\n                            <option value={owner} key={owner}/>\r\n                        )}\r\n                    </datalist>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateClient;","import React, { Component } from 'react';\r\nimport '../Styles/actions.css'\r\n\r\nclass AddClient extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            inputVals : {\r\n                name : \"\",\r\n                surname : \"\",\r\n                country : \"\",\r\n                owner : \"\",\r\n                email : \"\",\r\n            },\r\n            isLegit : false,\r\n            isEmpty: {\r\n                // email: false,\r\n                // owner: false,\r\n                // sold: false,\r\n            },\r\n        }\r\n    }\r\n\r\n    handleInput = (event) => {\r\n        const category = event.target.name\r\n        const value = event.target.value\r\n        let {inputVals} = this.state\r\n        inputVals[category] = value\r\n        this.setState({inputVals})\r\n    }\r\n\r\n    handleRequired = () => {\r\n        const requiredFields = [\"name\", \"surname\", \"country\", \"owner\"]\r\n        const {inputVals} = this.state\r\n        const {isEmpty} = this.state\r\n        for (let field of requiredFields){\r\n            if (inputVals[field] === \"\"){\r\n                isEmpty[field] = true\r\n            }\r\n            else {\r\n                isEmpty[field] = false\r\n            }\r\n        }\r\n        this.setState({isEmpty})\r\n    }\r\n\r\n    addClient = async () => {\r\n        this.handleRequired()\r\n        const {inputVals} = this.state\r\n        if (inputVals.name !== \"\" && inputVals.surname !== \"\"  && inputVals.country !== \"\" && inputVals.owner !== \"\"){\r\n            const clientAdded = await this.props.addNewClient(inputVals)\r\n            if (clientAdded) {\r\n                console.log(\"New client added to db\")\r\n                this.setState({isLegit : true})\r\n            }\r\n            else {\r\n                this.setState({isLegit : false})\r\n                console.log(\"Error adding client to db\")\r\n            }\r\n        }\r\n        else{\r\n            this.setState({isLegit : false})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {inputVals, isEmpty, isLegit} = this.state\r\n        return (\r\n            <div id=\"actions-add\">\r\n                <h3>ADD CLIENT</h3>\r\n                <div id=\"actions-add-container\">\r\n                    <span>First name:</span>\r\n                        <input name=\"name\" type=\"text\" value={inputVals.name} onChange={this.handleInput}/>\r\n                            {isEmpty.name ? <i className=\"fas fa-exclamation\"></i> : <div></div>}\r\n                    <span>Surname:</span>\r\n                        <input name=\"surname\" type=\"text\" value={inputVals.surname} onChange={this.handleInput}/>\r\n                            {isEmpty.surname ? <i className=\"fas fa-exclamation\"></i> : <div></div>}\r\n                    <span>Country:</span>\r\n                        <input name=\"country\" type=\"text\" value={inputVals.country} onChange={this.handleInput}/>\r\n                            {isEmpty.country ? <i className=\"fas fa-exclamation\"></i> : <div></div>}\r\n                    <span>Owner:</span>\r\n                        <input name=\"owner\" type=\"text\" value={inputVals.owner} onChange={this.handleInput}/>\r\n                            {isEmpty.owner ? <i className=\"fas fa-exclamation\"></i> : <div></div>}\r\n                    <span>Email address:</span>\r\n                        <input name=\"email\" type=\"text\" value={inputVals.email} onChange={this.handleInput}/>         \r\n                            <div></div>\r\n                </div>\r\n                <div id=\"button\" onClick={this.addClient}>Add New Client</div>\r\n                {isLegit ? <i className=\"fas fa-check\"></i> : <></>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddClient;","import React, { Component } from 'react';\r\nimport UpdateClient from './UpdateClient'\r\nimport AddClient from './AddClient'\r\nimport '../Styles/actions.css'\r\n\r\nclass Actions extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            salesByOwner : props.salesByOwner\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log('Actions - recieved props:' ,nextProps.salesByOwner)\r\n        this.setState({salesByOwner : nextProps.salesByOwner})\r\n    }\r\n\r\n    render() {\r\n        let {salesByOwner} = this.state\r\n        console.log(salesByOwner)\r\n        return (\r\n            <div id=\"actions-page\">\r\n                <UpdateClient\r\n                    salesByOwner={salesByOwner}\r\n                    changeClientInfo={this.props.changeClientInfo} />\r\n                <hr />\r\n                <AddClient \r\n                    addNewClient={this.props.addNewClient}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Actions;","import React, { Component } from 'react';\r\nimport {\r\n  ResponsiveContainer, BarChart, Bar, XAxis, YAxis, Tooltip,\r\n} from 'recharts'\r\n\r\nexport default class SalesByCategory extends Component {\r\n    state = {\r\n      salesByCategory : {\r\n        owner : [],\r\n        emailType : [],\r\n        country : []\r\n      },\r\n      categoryInput : \"owner\"\r\n    }\r\n\r\n    getSalesByCategory = () => {\r\n      const {salesByCategory, categoryInput} = this.state\r\n      if(salesByCategory[categoryInput].length === 0){\r\n        this.props.getSalesByCategory(categoryInput)\r\n      }\r\n    }\r\n\r\n    handleInput = (event) => {\r\n      const value = event.target.value\r\n      let {categoryInput} = this.state\r\n      categoryInput= value\r\n      this.setState({categoryInput}, () => {\r\n        this.getSalesByCategory()\r\n      })\r\n    }\r\n\r\n    static getDerivedStateFromProps = (props, state) => {\r\n        if (props.salesByCategory && (props.salesByCategory !== state.salesByCategory)) {\r\n            return {\r\n              salesByCategory: props.salesByCategory\r\n            }\r\n        }\r\n        return null\r\n    }\r\n\r\n  render() {\r\n    let {salesByCategory, categoryInput} = this.state\r\n    // console.log(salesByCategory)\r\n\r\n    let data = []\r\n    let salesInfo = salesByCategory[categoryInput]\r\n\r\n    let isEmpty = !Object.keys(salesInfo).length \r\n    if(!isEmpty){\r\n      const categoryNames = Object.keys(salesInfo)\r\n      for(let name of categoryNames){\r\n        data.push(salesInfo[name])\r\n      }\r\n      // console.log(data)  \r\n    }\r\n\r\n    let categories = Object.keys(salesByCategory)\r\n\r\n    return (\r\n      <div id=\"sales-by-category\">\r\n\r\n        <div id=\"choose-category\">\r\n          <span>Sales by</span>\r\n          <select value={categoryInput} onChange={this.handleInput} id=\"category\" className=\"category-choice\" type=\"text\" >\r\n            {categories.map(c => \r\n              <option value={c} key={c}>{c}</option>\r\n            )}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"chart\">\r\n          <ResponsiveContainer height={180} width=\"100%\">\r\n            <BarChart \r\n              width = {100}\r\n              height={100} \r\n              data={data}\r\n              margin={{\r\n                top: 20, right: 20, bottom: 20, left: 20,\r\n                }}\r\n            >\r\n              <XAxis dataKey=\"name\" />\r\n              <YAxis/>\r\n              <Tooltip />\r\n              <Bar dataKey=\"sales\" stackId=\"a\" fill=\"#8884d8\" />\r\n              <Bar dataKey=\"clients\" stackId=\"a\" fill=\"#82ca9d\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n    ResponsiveContainer, ComposedChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip,\r\n} from 'recharts';\r\n\r\nclass TopEmployees extends Component {\r\n    state = {\r\n        salesByOwner: {}\r\n    }\r\n\r\n    static getDerivedStateFromProps = (props, state) => {\r\n        if (props.salesByOwner && (props.salesByOwner !== state.salesByOwner)) {\r\n            return {\r\n                salesByOwner: props.salesByOwner\r\n            }\r\n        }\r\n        return null\r\n    }\r\n\r\n    render() {\r\n        let { salesByOwner } = this.state\r\n        let salesByOwnerObj = {}\r\n        Object.keys(salesByOwner).forEach(owner => {\r\n            salesByOwnerObj[owner] = salesByOwner[owner].sales\r\n        })\r\n        let topEmployees = Object.keys(salesByOwnerObj).sort(function (k, v) { return salesByOwnerObj[v] - salesByOwnerObj[k] })\r\n        const topThree = topEmployees.splice(0, 3)\r\n        let data = []\r\n        topThree.forEach(employee => {\r\n            data.push({ name: employee, sales: salesByOwnerObj[employee] })\r\n        })\r\n        console.log(data)\r\n        return (\r\n            <div id=\"top-employees\">\r\n                <div className=\"chart-title\">\r\n                    Top Employees\r\n                </div>\r\n\r\n                <div className=\"chart\">\r\n                    <ResponsiveContainer height={180} width=\"100%\">\r\n                        <ComposedChart\r\n                            layout=\"vertical\"\r\n                            width={100}\r\n                            height={100}\r\n                            data={data}\r\n                            margin={{\r\n                                top: 20, right: 20, bottom: 20, left: 20,\r\n                            }}\r\n                        >\r\n                            <CartesianGrid stroke=\"#f5f5f5\" />\r\n                            <XAxis type=\"number\" />\r\n                            <YAxis dataKey=\"name\" type=\"category\" />\r\n                            <Tooltip />\r\n                            <Bar dataKey=\"sales\" barSize={10} fill=\"#003f5c\" />\r\n                        </ComposedChart>\r\n                    </ResponsiveContainer>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopEmployees;","import React, { Component } from 'react';\r\nimport {\r\n    ResponsiveContainer, LineChart, Line, XAxis, YAxis, Tooltip,\r\n} from 'recharts';\r\n\r\nconst tempData= [\r\n  {clients: 2, name: \"Mar\", sales: 2, year: \"2019\"},\r\n  {clients: 10, name: \"Apr\", sales: 5, year: \"2019\"},\r\n  {clients: 12, name: \"May\", sales: 7, year: \"2019\"},\r\n  {clients: 11, name: \"Jun\", sales: 10, year: \"2019\"},\r\n  {clients: 4, name: \"Jul\", sales: 3, year: \"2019\"},\r\n  {clients: 2, name: \"Aug\", sales: 2, year: \"2019\"},\r\n  {clients: 2, name: \"Sep\", sales: 2, year: \"2019\"},\r\n  {clients: 1, name: \"Oct\", sales: 1, year: \"2019\"},\r\n  {clients: 4, name: \"Nov\", sales: 3, year: \"2019\"},\r\n  {clients: 10, name: \"Dec\", sales: 6, year: \"2019\"},\r\n  {clients: 34, name: \"Jan\", sales: 22, year: \"2020\"},\r\n]\r\n\r\nexport default class SalesSince extends Component {\r\n  state={\r\n    salesSince: {\r\n      data : [],\r\n      ready : false\r\n    }\r\n  }\r\n  \r\n  static getDerivedStateFromProps = (props, state) => {\r\n    if (props.salesSince && (props.salesSince.ready !== state.salesSince.ready)) {\r\n        return {\r\n          salesSince: props.salesSince\r\n        }\r\n    }\r\n    return null\r\n  }\r\n\r\n  // componentDidMount = () => {\r\n  //   this.props.handleMonthlySales(11, \"salesSince\", \"ready\")\r\n  // }\r\n\r\n  render() {\r\n    const {salesSince} = this.state\r\n    let loadingState = true\r\n    if(salesSince.data.length !== 10){loadingState = false}\r\n    console.log(salesSince)\r\n    let first = \"\"\r\n    if(salesSince.data.length !== 0){first = {month: salesSince.data[0].name, year: salesSince.data[0].year}}\r\n      return (\r\n        loadingState ? \r\n          <div></div> : \r\n        <div id=\"sales-since\">\r\n            <div className=\"chart-title\">\r\n                Monthly Sales Since {first.month} {first.year}\r\n            </div>\r\n            \r\n            <ResponsiveContainer height={180} width=\"100%\">\r\n                <LineChart\r\n                    width={100}\r\n                    height={100}\r\n                    data={tempData} //{salesSince.data}\r\n                    margin={{\r\n                        top: 20, right: 20, bottom: 20, left: 20,\r\n                    }}\r\n                >\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Line type=\"monotone\" dataKey=\"sales\" stroke=\"#ff6e54\" dot={false} strokeWidth={2} />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n        )    \r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n  ResponsiveContainer, PieChart, Pie, Tooltip,\r\n} from 'recharts';\r\n\r\nconst tempData = [\r\n  {name: \"Last Month\", value: 44},\r\n  {name: \"Last Six Months\", value: 57},\r\n  {name: \"Last year\", value: 95}]\r\n\r\nexport default class ClientAcquisition extends Component {\r\n  state={\r\n    clientsSum: {\r\n      data: {\r\n        1 : 0,\r\n        6: 0,\r\n        12: 0 ,\r\n      },\r\n      ready : false\r\n    }\r\n  }\r\n  \r\n  // componentDidMount = () => {\r\n  //   this.handleClientAcquisition()\r\n  // }\r\n  \r\n  static getDerivedStateFromProps = (props, state) => {\r\n    if (props.clientsSum && (props.clientsSum.ready !== state.clientsSum.ready)) {\r\n        return {\r\n          clientsSum: props.clientsSum\r\n        }\r\n    }\r\n    return null\r\n  }\r\n\r\n  handleClientAcquisition = () => {\r\n    let numsArray=[12,6,1]\r\n    numsArray.forEach(num => {\r\n      num === 1 ?\r\n      this.props.handleMonthlySales(num, \"clientAcquisition\", \"ready\") :\r\n      this.props.handleMonthlySales(num, \"clientAcquisition\", \"loading\")\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let {clientsSum} = this.state\r\n    let titles = {1 : \"Last Month\", 6 : \"Last Six Months\", 12 : \"Last year\"}\r\n    let data = []\r\n    Object.keys(clientsSum.data).forEach(key => {\r\n      data.push(({name : titles[key] , value : clientsSum.data[key]}))\r\n    })\r\n    // console.log(data)\r\n    return (\r\n      <div id=\"clilent-acquisition\">\r\n        <div className=\"chart-title\">\r\n            Client Aquisition\r\n        </div>\r\n        \r\n        {/* {clientsSum.ready ?  */}\r\n        <ResponsiveContainer height={180} width=\"100%\">\r\n          <PieChart art width={100} height={100}>\r\n            <Pie \r\n              dataKey=\"value\" \r\n              isAnimationActive={true}\r\n              data={tempData} //data\r\n              innerRadius={35} \r\n              outerRadius={50} \r\n              fill= \"#95a5a6\"\r\n              label />\r\n            <Tooltip />\r\n          </PieChart>\r\n        </ResponsiveContainer> \r\n        {/* :<div></div>} */}\r\n      </div>\r\n    )    \r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport SalesByCategory from './SalesByCategory'\r\nimport TopEmployees from './TopEmployees'\r\nimport SalesSince from './SalesSince'\r\nimport ClientAcquisition from './ClientAcquisition'\r\nimport '../Styles/analytics.css'\r\n\r\nclass Charts extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"charts-container\">\r\n                <div id=\"charts-container1\">\r\n                    <TopEmployees \r\n                        salesByOwner={this.props.salesByCategory.owner}/>\r\n                    <SalesByCategory \r\n                        salesByCategory={this.props.salesByCategory}\r\n                        getSalesByCategory={this.props.getSalesByCategory}/>      \r\n                </div>\r\n                <div id=\"charts-container2\">\r\n                    <SalesSince \r\n                        handleMonthlySales={this.props.handleMonthlySales}\r\n                        salesSince={this.props.salesSince}/>\r\n                    <ClientAcquisition \r\n                        handleMonthlySales={this.props.handleMonthlySales}\r\n                        clientsSum={this.props.clientsSum}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Charts;","import React, { Component } from 'react';\r\nimport '../Styles/analytics.css'\r\n\r\nclass Badge extends Component {\r\n    render() {\r\n        let iconName = this.props.iconName\r\n        let data = this.props.data\r\n        let title = this.props.title\r\n\r\n        return (\r\n            <div className=\"badge\">\r\n                <span className=\"icon-container\">\r\n                    <i className={`fas fa-${iconName}`}></i>\r\n                </span>\r\n                <span className=\"data\">{data}</span>\r\n                <span className=\"title\">{title}</span>    \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Badge;","import React, { Component } from 'react';\r\nimport Badge from './Badge';\r\nimport '../Styles/analytics.css'\r\n\r\nclass NewClients extends Component {\r\n    state = {\r\n        iconName : \"chart-line\",\r\n        data : 14,\r\n        // title : ,\r\n    }\r\n\r\n    monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n\r\n    render() {\r\n        const {iconName, data} = this.state\r\n        let d = new Date()\r\n        let currentMonth = this.monthNames[d.getMonth()]\r\n        const title = currentMonth\r\n        let fullTitle = `New ${title} Clients`\r\n        return (\r\n            <div id=\"new-clients\" className=\"badge-container\">\r\n                <Badge iconName={iconName} data={data} title={fullTitle}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewClients;","import React, { Component } from 'react';\r\nimport Badge from './Badge';\r\nimport '../Styles/analytics.css'\r\n\r\nclass EmailsSent extends Component {\r\n    state = {\r\n        iconName : \"envelope\",\r\n        data : 412,\r\n        title : \"Emails Sent\",\r\n    }\r\n\r\n    // static getDerivedStateFromProps = (props, state) => {\r\n    //     if (props.data && (props.data !== state.data)) {\r\n    //         return {\r\n    //             data: props.data\r\n    //         }\r\n    //     }\r\n    //     return null\r\n    // }\r\n\r\n    render() {\r\n        const {iconName, data , title} = this.state\r\n        return (\r\n            <div id=\"emails-sent\" className=\"badge-container\">\r\n                <Badge iconName={iconName} data={data} title={title}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EmailsSent;","import React, { Component } from 'react';\r\nimport Badge from './Badge';\r\nimport '../Styles/analytics.css'\r\n\r\nclass OutstandingClients extends Component {\r\n    state = {\r\n        iconName : \"user-circle\",\r\n        data :198,\r\n        title : \"Outstanding Clients\",\r\n    }\r\n\r\n    render() {\r\n        const {iconName, data , title} = this.state\r\n        return (\r\n            <div id=\"outstanding-clients\" className=\"badge-container\">\r\n                <Badge iconName={iconName} data={data} title={title}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OutstandingClients;","import React, { Component } from 'react';\r\nimport Badge from './Badge';\r\nimport '../Styles/analytics.css'\r\n\r\nclass HottestCountry extends Component {\r\n    state = {\r\n        iconName : \"globe-americas\",\r\n        data : \"France\",\r\n        title : \"Hottest Country\",\r\n    }\r\n\r\n    render() {\r\n        const {iconName, data , title} = this.state\r\n        return (\r\n            <div id=\"hottest-country\" className=\"badge-container\">\r\n                <Badge iconName={iconName} data={data} title={title}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HottestCountry;","import React, { Component } from 'react';\r\nimport NewClients from './NewClients';\r\nimport EmailsSent from './EmailsSent';\r\nimport OutstandingClients from './OutstandingClients';\r\nimport HottestCountry from './HottestCountry';\r\nimport '../Styles/analytics.css'\r\n\r\nclass Badges extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"badges-container\">\r\n                <NewClients />\r\n                <EmailsSent />\r\n                <OutstandingClients />\r\n                <HottestCountry />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Badges;","import React, { Component } from 'react';\r\nimport Charts from './Charts'\r\nimport Badges from './Badges'\r\nimport '../Styles/analytics.css'\r\n\r\nclass Analytics extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Badges />\r\n                <Charts \r\n                    salesByCategory={this.props.salesByCategory}\r\n                    getSalesByCategory={this.props.getSalesByCategory}\r\n                    handleMonthlySales={this.props.handleMonthlySales}\r\n                    salesSince={this.props.salesSince}\r\n                    clientsSum={this.props.clientsSum}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Analytics;","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport axios from 'axios'\nimport Navbar from './components/Navbar'\nimport Home from './home/Home'\nimport Clients from './clients/Clients'\nimport Actions from './actions/Actions'\nimport Analytics from './analytics/Analytics'\nimport './App.css';\n\nconst URL = window.location.hostname.includes(\"localhost\") ? \"http://localhost:4000/\" : \"https://the-amazing-crm.herokuapp.com/\"\nconsole.log(URL)\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      clients: [],\n      salesByCategory: {\n        owner: [],\n        emailType: [],\n        country: []\n      },\n      salesSince: {\n        data: [],\n        ready: false\n      },\n      clientsSum: {\n        data: {\n          1: 0,\n          6: 0,\n          12: 0,\n        },\n        ready: false,\n      }\n    }\n  }\n\n  componentDidMount = () => {\n    console.log(\"App- Mounted\")\n    this.getClients()\n    this.getSalesByCategory(\"owner\")\n  }\n\n  getClients = () => {\n    // setTimeout(() => {\n    //   let clients = require('./data/data.json')\n    //   this.setState({clients})\n    // }, 1000);\n\n    axios.get(URL + 'clients')\n      .then(clients => {\n        console.log(\"App- Got Clients from db\")\n        this.setState({ clients: clients.data })\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  getSalesByCategory = (category) => {\n    let capitalizedCategory = category[0].toUpperCase() + category.slice(1)\n    let salesByCategoryName = \"salesBy\" + capitalizedCategory\n    axios.get(URL + 'salesBy/' + capitalizedCategory)\n      .then(results => {\n        console.log(\"App- Got \" + salesByCategoryName + \" from db\")\n        let { salesByCategory } = this.state\n        salesByCategory[category] = results.data\n        this.setState({ salesByCategory })\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n\n  pastMonths(num) {\n    const shortMonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    var now = new Date()\n    let monthsArray = [{ month: shortMonths[now.getMonth()], year: now.getYear() + 1900 }]\n    for (let i = 0; i < num; i++) {\n      now.setDate(now.getDate() - 30)\n      monthsArray.push({ month: shortMonths[now.getMonth()], year: now.getYear() + 1900 })\n    }\n    return monthsArray.reverse()\n  }\n\n  setClientsSum = (salesArray, num, ready) => {\n    let { clientsSum } = this.state\n    let currentClientsNum = parseInt(clientsSum.data[num], 10)\n    currentClientsNum += salesArray.data.clients\n    clientsSum.data[num] = currentClientsNum\n    clientsSum.ready = ready\n    this.setState({ clientsSum })\n  }\n\n  setSalesSince = (salesArray, num, ready) => {\n    let { salesSince } = this.state\n    salesSince.data.push(salesArray.data)\n    salesSince.ready = ready\n    this.setState({ salesSince })\n  }\n\n  getSalesSince = (num, func, status) => {\n    const monthsArray = this.pastMonths(num)\n    let ready\n    monthsArray.forEach((date, index) => {\n      if ((index === (monthsArray.length - 1)) && (status === \"ready\")) { ready = true }\n      else { ready = false }\n\n      let month = date.month\n      let year = date.year\n      axios.get(URL + `salesSince/${year}/${month}`)\n        .then(results => {\n          func(results, num, ready)\n        })\n        .catch(error => {\n          console.log(error)\n        })\n    })\n    console.log(\"App- Got salesSince from db\")\n  }\n\n  handleMonthlySales = (num, operationType, status) => {\n    let func\n    if (operationType === \"clientAcquisition\") {\n      func = this.setClientsSum\n      let { clientsSum } = this.state\n      clientsSum.data[num] = 0\n      clientsSum.ready = false\n      this.setState({ clientsSum })\n      this.getSalesSince(num, func, status)\n    }\n    else {\n      func = this.setSalesSince\n      let { salesSince } = this.state\n      salesSince.data = []\n      salesSince.ready = false\n      this.setState({ salesSince })\n      this.getSalesSince(num, func, status)\n    }\n  }\n\n  capitalizeWord(word) {\n    if (word !== undefined) {\n      return word.charAt(0).toUpperCase() + word.slice(1)\n    }\n    return \"\"\n  }\n\n  addNewClient = async (inputVals) => {\n    const name = this.capitalizeWord(inputVals.name)\n    const surname = this.capitalizeWord(inputVals.surname)\n    const country = this.capitalizeWord(inputVals.country)\n    const owner = `${this.capitalizeWord(inputVals.owner.split(\" \")[0])} ${this.capitalizeWord(inputVals.owner.split(\" \")[1])}`\n\n    const managedInputVals = {\n      name: `${name} ${surname}`,\n      country: country,\n      email: inputVals.email || \"\",\n      owner: owner,\n      sold: false,\n      firstContact: new Date().toISOString().split('T')[0]\n    }\n\n    return axios.post(URL + 'client', managedInputVals)\n      .then(r => {\n        console.log(\"App- added new client to DB:\", r)\n        return true\n      })\n      .catch(e => {\n        console.log(e)\n        return false\n      })\n  }\n\n  advancedUpdateClient = (clientName, category, inputVal) => {\n    let clients = this.state.clients\n    for (let c in clients) {\n      if (clients[c].name.toLowerCase() === clientName.toLowerCase()) {\n\n        let clientToUpdate = clients[c]\n        let clientId = clientToUpdate._id\n        let updatedVal = {}\n        updatedVal[category] = inputVal\n        axios.put(URL + `client/${clientId}`, updatedVal)\n          .then(r => {\n            console.log(\"App- updated Client Vals:\", r)\n          })\n          .catch(e => console.log(e))\n\n        //updating locally:\n        clientToUpdate[category] = inputVal\n        clients[c] = clientToUpdate\n        this.setState({ clients })\n        return true\n      }\n    }\n    return false\n  }\n\n  updateClient = (clientId, updateVals) => {\n    axios.put(URL + `client/${clientId}`, updateVals)\n      .then(r => {\n        console.log(\"App- updating Client Vals:\", r)\n      })\n      .catch(e => console.log(e))\n\n    //updating locally:\n    let clients = this.state.clients\n    for (let c in clients) {\n      if (clients[c]._id === clientId) {\n        let clientToUpdate = clients[c]\n        let updateKeys = Object.keys(updateVals)\n        for (let key of updateKeys) {\n          clientToUpdate[key] = updateVals[key]\n        }\n        clients[c] = clientToUpdate\n        this.setState({ clients })\n        return\n      }\n    }\n  }\n\n  render() {\n    let { clients, salesByCategory, salesSince, clientsSum } = this.state\n    // console.log(clients)\n    // console.log(salesByCategory)\n    // console.log(salesSince)\n    // console.log(clientsSum)\n\n    return (\n      <Router>\n        <div className=\"App\">\n\n          <Navbar />\n          <Route exact path=\"/\" render={() =>\n            <Home />} />\n\n          <Route exact path=\"/clients\" render={() =>\n            <Clients\n              clients={clients}\n              updateClient={this.updateClient} />} />\n\n          <Route exact path=\"/actions\" render={() =>\n            <Actions\n              salesByOwner={salesByCategory.owner}\n              changeClientInfo={this.advancedUpdateClient}\n              addNewClient={this.addNewClient} />} />\n\n          <Route exact path=\"/analytics\" render={() =>\n            <Analytics\n              getSalesByCategory={this.getSalesByCategory}\n              salesByCategory={salesByCategory}\n              handleMonthlySales={this.handleMonthlySales}\n              salesSince={salesSince}\n              clientsSum={clientsSum} />} />\n\n          <div id=\"footer-bar\"></div>\n\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}